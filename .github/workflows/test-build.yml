name: Test && Build && Push

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop and master branches
on:
  pull_request:
    branches: [develop, master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        uses: actions/cache@v3
        env:
          cache-name: ${{ matrix.node-version }}-cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - run: npm ci --loglevel error --no-fund
      - run: npm run build
      - run: npm test
        env:
          UO_FEATURE_ALLOW_NO_SANDBOX: ${{ vars.UO_FEATURE_ALLOW_NO_SANDBOX }}

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache app docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-layer-cache
          key: ${{ runner.os }}-buildx-${{ github.head_ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.head_ref }}-
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        # Don't login if dependabot is creating the PR
        if: ${{ !startsWith(github.head_ref, 'dependabot') }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # For debugging capture the selected branch
      - name: Extracted branch
        run: echo "Extracted branch ${{ github.head_ref }}"

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          # Don't push if dependabot is creating the PR
          push: ${{ !startsWith(github.head_ref, 'dependabot') }}
          platforms: linux/amd64,linux/arm64/v8
          tags: ghcr.io/userofficeproject/user-office-factory:${{ github.head_ref }}
          cache-from: |
            type=gha,scope=${{ github.workflow }}:linux/amd64
            type=gha,scope=${{ github.workflow }}:linux/arm64/v8
